name: CI/CD

on:
  push:
    branches: ['master']
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - run: npm run lint:ci

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - run: npm run test:coverage

      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          retention-days: 30

  build:
    runs-on: ubuntu-latest
    outputs:
      build-output-cache-hit: ${{ steps.cache-build-output.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4

      - id: setup
        uses: ./.github/actions/setup

      - run: npm run build

      - id: cache-build-output
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-${{steps.setup.outputs.node-version}}-build-output-${{hashFiles('dist/**')}}

      - uses: actions/upload-artifact@v4
        if: steps.cache-build-output.outputs.cache-hit != 'true'
        with:
          name: build-output
          path: dist/
          retention-days: 30

  e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    steps:
      - uses: actions/checkout@v4

      - id: setup
        uses: ./.github/actions/setup

      - run: |
          PLAYWRIGHT_VERSION=$(cat package-lock.json | jq -r '.packages["node_modules/@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-${{steps.setup.outputs.node-version}}-playwright-${{ env.PLAYWRIGHT_VERSION }}-${{hashFiles('playwright.config.js')}}

      - run: npm run e2e:setup
        if: steps.cache-playwright.outputs.cache-hit != 'true'

      - run: npm run e2e

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy
      cancel-in-progress: false
    needs:
      - lint
      - test
      - e2e
      - build
    if: needs.build.outputs.build-output-cache-hit != 'true'
    steps:
      - uses: actions/checkout@v4 # is needed only for proper deployment source description in cloudflare dashboard

      - uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist/

      - uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy
          wranglerVersion: "3.67.1"
