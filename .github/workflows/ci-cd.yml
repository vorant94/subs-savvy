name: CI/CD

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:

jobs:
  are-translations-sorted:
    name: Are Translations Sorted
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node & NPM
        uses: ./.github/actions/setup

      - name: Are Translations Sorted
        run: npm run script scripts/are-translations-sorted.ts

  or-docs-or-non-docs:
    name: Or Docs Or Non-Docs
    runs-on: ubuntu-latest
    # TODO should it be run on push to master as well?
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node & NPM
        uses: ./.github/actions/setup

      - name: Or Docs Or Non-Docs
        run: npm run script scripts/or-docs-or-non-docs.ts -- --target origin/${{ github.event.pull_request.base.ref }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node & NPM
        uses: ./.github/actions/setup

      - name: Lint
        run: npm run lint:ci

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node & NPM
        uses: ./.github/actions/setup

      - name: Run Unit Tests
        run: npm run test:coverage

      - name: Upload Unit Test Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: coverage/
          retention-days: 30

  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      bundle-cache-hit: ${{ steps.cache-bundle.outputs.cache-hit }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node & NPM
        id: setup
        uses: ./.github/actions/setup

      - name: Build App Bundle
        run: npm run build

      - name: Cache App Bundle
        id: cache-bundle
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-${{steps.setup.outputs.node-version}}-bundle-${{hashFiles('dist/**')}}

      - name: Upload App Bundle
        if: steps.cache-bundle.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: bundle
          path: dist/
          retention-days: 30

  e2e:
    name: E2E
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node & NPM
        id: setup
        uses: ./.github/actions/setup

      - name: Run E2E Tests
        uses: ./.github/actions/e2e
        with:
          env: 'development'

  deploy:
    environment:
      name: production
      url: https://subs-savvy.vorant94.io
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - are-translations-sorted
      - lint
      - test
      - e2e
      - build
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/master' &&
      needs.build.outputs.bundle-cache-hit != 'true'
    concurrency:
      group: deploy
      cancel-in-progress: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node & NPM
        id: setup
        uses: ./.github/actions/setup

      - name: Download App Bundle
        uses: actions/download-artifact@v4
        with:
          name: bundle
          path: dist/

      - name: Deploy Bundle
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
